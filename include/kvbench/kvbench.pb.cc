// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kvbench.proto

#include "kvbench.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_kvbench_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_kvbench_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Stat;
}  // namespace protobuf_kvbench_2eproto
namespace kvbench {
class StatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Stat>
      _instance;
} _Stat_default_instance_;
class StatsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Stats>
      _instance;
} _Stats_default_instance_;
}  // namespace kvbench
namespace protobuf_kvbench_2eproto {
static void InitDefaultsStat() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvbench::_Stat_default_instance_;
    new (ptr) ::kvbench::Stat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvbench::Stat::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Stat =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStat}, {}};

static void InitDefaultsStats() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvbench::_Stats_default_instance_;
    new (ptr) ::kvbench::Stats();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvbench::Stats::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Stats =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsStats}, {
      &protobuf_kvbench_2eproto::scc_info_Stat.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Stat.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Stats.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvbench::Stat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvbench::Stat, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvbench::Stat, average_latency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvbench::Stat, max_latency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvbench::Stat, throughput_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvbench::Stat, latency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvbench::Stat, failed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvbench::Stat, total_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvbench::Stats, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvbench::Stats, stat_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::kvbench::Stat)},
  { 12, -1, sizeof(::kvbench::Stats)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvbench::_Stat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvbench::_Stats_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "kvbench.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rkvbench.proto\022\007kvbench\"\212\001\n\004Stat\022\020\n\010dur"
      "ation\030\001 \001(\001\022\027\n\017average_latency\030\002 \001(\001\022\023\n\013"
      "max_latency\030\003 \001(\001\022\022\n\nthroughput\030\004 \001(\001\022\017\n"
      "\007latency\030\005 \003(\001\022\016\n\006failed\030\006 \001(\005\022\r\n\005total\030"
      "\007 \001(\005\"$\n\005Stats\022\033\n\004stat\030\001 \003(\0132\r.kvbench.S"
      "tatb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 211);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "kvbench.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_kvbench_2eproto
namespace kvbench {

// ===================================================================

void Stat::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Stat::kDurationFieldNumber;
const int Stat::kAverageLatencyFieldNumber;
const int Stat::kMaxLatencyFieldNumber;
const int Stat::kThroughputFieldNumber;
const int Stat::kLatencyFieldNumber;
const int Stat::kFailedFieldNumber;
const int Stat::kTotalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Stat::Stat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvbench_2eproto::scc_info_Stat.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvbench.Stat)
}
Stat::Stat(const Stat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      latency_(from.latency_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&duration_, &from.duration_,
    static_cast<size_t>(reinterpret_cast<char*>(&total_) -
    reinterpret_cast<char*>(&duration_)) + sizeof(total_));
  // @@protoc_insertion_point(copy_constructor:kvbench.Stat)
}

void Stat::SharedCtor() {
  ::memset(&duration_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&total_) -
      reinterpret_cast<char*>(&duration_)) + sizeof(total_));
}

Stat::~Stat() {
  // @@protoc_insertion_point(destructor:kvbench.Stat)
  SharedDtor();
}

void Stat::SharedDtor() {
}

void Stat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Stat::descriptor() {
  ::protobuf_kvbench_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvbench_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Stat& Stat::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvbench_2eproto::scc_info_Stat.base);
  return *internal_default_instance();
}


void Stat::Clear() {
// @@protoc_insertion_point(message_clear_start:kvbench.Stat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  latency_.Clear();
  ::memset(&duration_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&total_) -
      reinterpret_cast<char*>(&duration_)) + sizeof(total_));
  _internal_metadata_.Clear();
}

bool Stat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvbench.Stat)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double duration = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double average_latency = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &average_latency_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double max_latency = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &max_latency_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double throughput = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &throughput_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double latency = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_latency())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 42u, input, this->mutable_latency())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 failed = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &failed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 total = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvbench.Stat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvbench.Stat)
  return false;
#undef DO_
}

void Stat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvbench.Stat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double duration = 1;
  if (this->duration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->duration(), output);
  }

  // double average_latency = 2;
  if (this->average_latency() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->average_latency(), output);
  }

  // double max_latency = 3;
  if (this->max_latency() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->max_latency(), output);
  }

  // double throughput = 4;
  if (this->throughput() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->throughput(), output);
  }

  // repeated double latency = 5;
  if (this->latency_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _latency_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->latency().data(), this->latency_size(), output);
  }

  // int32 failed = 6;
  if (this->failed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->failed(), output);
  }

  // int32 total = 7;
  if (this->total() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->total(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvbench.Stat)
}

::google::protobuf::uint8* Stat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvbench.Stat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double duration = 1;
  if (this->duration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->duration(), target);
  }

  // double average_latency = 2;
  if (this->average_latency() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->average_latency(), target);
  }

  // double max_latency = 3;
  if (this->max_latency() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->max_latency(), target);
  }

  // double throughput = 4;
  if (this->throughput() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->throughput(), target);
  }

  // repeated double latency = 5;
  if (this->latency_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _latency_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->latency_, target);
  }

  // int32 failed = 6;
  if (this->failed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->failed(), target);
  }

  // int32 total = 7;
  if (this->total() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->total(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvbench.Stat)
  return target;
}

size_t Stat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvbench.Stat)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated double latency = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->latency_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _latency_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // double duration = 1;
  if (this->duration() != 0) {
    total_size += 1 + 8;
  }

  // double average_latency = 2;
  if (this->average_latency() != 0) {
    total_size += 1 + 8;
  }

  // double max_latency = 3;
  if (this->max_latency() != 0) {
    total_size += 1 + 8;
  }

  // double throughput = 4;
  if (this->throughput() != 0) {
    total_size += 1 + 8;
  }

  // int32 failed = 6;
  if (this->failed() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->failed());
  }

  // int32 total = 7;
  if (this->total() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->total());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Stat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvbench.Stat)
  GOOGLE_DCHECK_NE(&from, this);
  const Stat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Stat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvbench.Stat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvbench.Stat)
    MergeFrom(*source);
  }
}

void Stat::MergeFrom(const Stat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvbench.Stat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  latency_.MergeFrom(from.latency_);
  if (from.duration() != 0) {
    set_duration(from.duration());
  }
  if (from.average_latency() != 0) {
    set_average_latency(from.average_latency());
  }
  if (from.max_latency() != 0) {
    set_max_latency(from.max_latency());
  }
  if (from.throughput() != 0) {
    set_throughput(from.throughput());
  }
  if (from.failed() != 0) {
    set_failed(from.failed());
  }
  if (from.total() != 0) {
    set_total(from.total());
  }
}

void Stat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvbench.Stat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stat::CopyFrom(const Stat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvbench.Stat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stat::IsInitialized() const {
  return true;
}

void Stat::Swap(Stat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Stat::InternalSwap(Stat* other) {
  using std::swap;
  latency_.InternalSwap(&other->latency_);
  swap(duration_, other->duration_);
  swap(average_latency_, other->average_latency_);
  swap(max_latency_, other->max_latency_);
  swap(throughput_, other->throughput_);
  swap(failed_, other->failed_);
  swap(total_, other->total_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Stat::GetMetadata() const {
  protobuf_kvbench_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvbench_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Stats::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Stats::kStatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Stats::Stats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvbench_2eproto::scc_info_Stats.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvbench.Stats)
}
Stats::Stats(const Stats& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      stat_(from.stat_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:kvbench.Stats)
}

void Stats::SharedCtor() {
}

Stats::~Stats() {
  // @@protoc_insertion_point(destructor:kvbench.Stats)
  SharedDtor();
}

void Stats::SharedDtor() {
}

void Stats::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Stats::descriptor() {
  ::protobuf_kvbench_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvbench_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Stats& Stats::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvbench_2eproto::scc_info_Stats.base);
  return *internal_default_instance();
}


void Stats::Clear() {
// @@protoc_insertion_point(message_clear_start:kvbench.Stats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stat_.Clear();
  _internal_metadata_.Clear();
}

bool Stats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvbench.Stats)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .kvbench.Stat stat = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_stat()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvbench.Stats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvbench.Stats)
  return false;
#undef DO_
}

void Stats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvbench.Stats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .kvbench.Stat stat = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stat_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->stat(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvbench.Stats)
}

::google::protobuf::uint8* Stats::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvbench.Stats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .kvbench.Stat stat = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stat_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->stat(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvbench.Stats)
  return target;
}

size_t Stats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvbench.Stats)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .kvbench.Stat stat = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->stat_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->stat(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Stats::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvbench.Stats)
  GOOGLE_DCHECK_NE(&from, this);
  const Stats* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Stats>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvbench.Stats)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvbench.Stats)
    MergeFrom(*source);
  }
}

void Stats::MergeFrom(const Stats& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvbench.Stats)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stat_.MergeFrom(from.stat_);
}

void Stats::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvbench.Stats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stats::CopyFrom(const Stats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvbench.Stats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stats::IsInitialized() const {
  return true;
}

void Stats::Swap(Stats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Stats::InternalSwap(Stats* other) {
  using std::swap;
  CastToBase(&stat_)->InternalSwap(CastToBase(&other->stat_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Stats::GetMetadata() const {
  protobuf_kvbench_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvbench_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace kvbench
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvbench::Stat* Arena::CreateMaybeMessage< ::kvbench::Stat >(Arena* arena) {
  return Arena::CreateInternal< ::kvbench::Stat >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvbench::Stats* Arena::CreateMaybeMessage< ::kvbench::Stats >(Arena* arena) {
  return Arena::CreateInternal< ::kvbench::Stats >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
